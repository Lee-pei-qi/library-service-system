/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.service.system;

import java.io.*;
import java.text.*; //parse exception & simpledateformat
import java.util.*;
import java.util.logging.*; //logger
import javax.swing.*; 
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class Renew extends javax.swing.JFrame {
    private String UserID;
    private int isAdmin;
    String file = "BookBorrow.txt";


    /**
     * Creates new form Renew
     */
    public Renew() {
        initComponents();
    }

    public Renew(String id, int isAdmin) throws FileNotFoundException, ParseException {
        initComponents();
        ImageIcon icon = new ImageIcon("apu.jpg"); 
        setIconImage(icon.getImage());
        
        UserID = id;
        this.isAdmin = isAdmin;
        
        DefaultTableModel model = (DefaultTableModel)tblRenew.getModel();
        ReadFile rf = new ReadFile();
        
        //display books borrowed by user
        if (rf.hasUser(file, UserID) == true){
           String line = rf.getLine();               //get sb.tostring() - all borrow records
           String[] record = line.split("\n");       //split and separate each bookborrow record row
           
           for (int i=0; i<record.length; i++){
                String[] data = record[i].split("/");   //split details of each book
                model.addRow(new Object[]{data[0], data[1], data[3], data[4], data[5]});  // https://www.youtube.com/watch?v=F0Zq2fAUpXg&t=243s
           }     
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRenew = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnRenew = new javax.swing.JButton();

        jLabel2.setText("alert: Do you want to return <name>? return successful");

        jLabel5.setText("system caluclate & display fine (if any)");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Renew");
        setMaximumSize(new java.awt.Dimension(655, 506));
        setMinimumSize(new java.awt.Dimension(655, 506));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(655, 506));
        jPanel1.setMinimumSize(new java.awt.Dimension(655, 506));
        jPanel1.setPreferredSize(new java.awt.Dimension(655, 506));

        tblRenew.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Title", "Borrow Date", "Due Date", "Renew Times"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblRenew.setGridColor(new java.awt.Color(255, 255, 204));
        tblRenew.setMinimumSize(new java.awt.Dimension(75, 40));
        jScrollPane1.setViewportView(tblRenew);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Please select a book to renew.");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("Renew");

        btnCancel.setBackground(new java.awt.Color(153, 137, 247));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.setFocusPainted(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnRenew.setBackground(new java.awt.Color(102, 102, 255));
        btnRenew.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnRenew.setForeground(new java.awt.Color(255, 255, 255));
        btnRenew.setText("Renew");
        btnRenew.setFocusPainted(false);
        btnRenew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnRenew, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRenew)
                    .addComponent(btnCancel))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
            this.dispose();
            
            if (isAdmin == 0){
            Homepage homepage = new Homepage(UserID);
            homepage.setVisible(true);
            } else {
                AdminPage ap = new AdminPage();
                ap.setVisible(true);
            }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRenewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenewActionPerformed
            // get record for the selected row
            DefaultTableModel model = (DefaultTableModel)tblRenew.getModel();
            
            //if no row is selected
            if (tblRenew.getSelectionModel().isSelectionEmpty()){
                JOptionPane.showMessageDialog(null, "Please select a row!", "Missing Input", JOptionPane.ERROR_MESSAGE);
            } else {
            int selectedRow = tblRenew.getSelectedRow();
            
            long BookID = Long.parseLong((String)model.getValueAt(selectedRow, 0));
            
            BookBorrow book = new BookBorrow(BookID, (String)model.getValueAt(selectedRow, 1), (String)model.getValueAt(selectedRow, 2), (String)model.getValueAt(selectedRow, 3), UserID, Integer.parseInt((String)model.getValueAt(selectedRow, 4)));
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            Date currentDate = new Date();
            
        try {
            //check if book is overdue
            if (sdf.parse(book.getDueDate()).before(sdf.parse(sdf.format((currentDate))))){
                JOptionPane.showMessageDialog(null, "Renew UNSUCCESSFUL! \n\n The book is OVERDUE! Please return the book.", "Renew Unsuccess", JOptionPane.ERROR_MESSAGE);
            } else {
                // check if the book can be renewed (max 3 times)
                if (book.getRenewTimes() < 3){
                    book.setDueDate(sdf.format(currentDate));

                    // update due date to textfile
                    WriteFile wf = new WriteFile(file);
                    wf.updateFile(UpdateRow(BookID, book.getDueDate()));
                    JOptionPane.showMessageDialog(null, "Renew successful! \n\n Please return BEFORE " + book.getDueDate(), "Renew Success", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    Renew renew = new Renew(UserID, isAdmin);
                    renew.setVisible(true);
                } else {
                JOptionPane.showMessageDialog(null, "Renew UNSUCCESSFUL! \n\n The book has been renewed 3 times! Please return the book.", "Renew Unsuccess", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(Renew.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, "The file does not exist. Please enter a valid file name.", "File Not Found", JOptionPane.ERROR_MESSAGE);   
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "ERROR! Record is not written to file.", "Record Not Written", JOptionPane.ERROR_MESSAGE);
        }}
    }//GEN-LAST:event_btnRenewActionPerformed

    
    private String UpdateRow(long BookID, String date) throws FileNotFoundException{    
        
           // https://unpossiblepog.blogspot.com/2018/12/java-tutorial-text-file-as-database.html
           File f = new File(file);
           Scanner sc = new Scanner(f);
           String line = "";
           StringBuilder sb = new StringBuilder();
           
           while(sc.hasNextLine()){
               line = sc.nextLine();
               String[] data = line.split("/");

               if (Long.parseLong(data[0]) == BookID){
                   //add 1 to renew times - to indicate new renewal
                   int times = Integer.parseInt(data[5]) + 1;
                   String row = data[0] + "/" + data[1] + "/" + data[2] + "/" + data[3] + "/" + date + "/" + times;
                   sb.append(row);
                   sb.append("\n");
               } else {
               sb.append(line);
               sb.append("\n");
               }
           }
           sc.close();
           return sb.toString();
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Renew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Renew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Renew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Renew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Renew().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRenew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRenew;
    // End of variables declaration//GEN-END:variables
}
