/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.service.system;

import java.io.*;
import java.text.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class Return extends javax.swing.JFrame {
    private String UserID;
    private int isAdmin;
    String file = "BookBorrow.txt";
    String[] renewTimes;
    
    /**
     * Creates new form Return
     */
    public Return() {
        initComponents();
    }

    public Return(String id, int isAdmin) throws FileNotFoundException {
        initComponents();
        ImageIcon icon = new ImageIcon("apu.jpg"); 
        setIconImage(icon.getImage());
        
        UserID = id;
        this.isAdmin = isAdmin;
        
        DefaultTableModel model = (DefaultTableModel)tblReturn.getModel();
        
        ReadFile rf = new ReadFile();
        
        //display the book borrowed by user
        if (rf.hasUser(file, UserID) == true){
           String line = rf.getLine();           //get all book records
           String[] record = line.split("\n");   //split and separate each book record rows
           renewTimes = new String[record.length];  //set array size 
           
           for (int i=0; i<record.length; i++){
                String[] data = record[i].split("/");   //split book details 
          
                model.addRow(new Object[]{data[0], data[1], data[3], data[4]});
                renewTimes[i] = data[5];                //save renew times for each book
           }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReturn = new javax.swing.JTable();
        btnReturn = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Return");
        setMaximumSize(new java.awt.Dimension(655, 506));
        setMinimumSize(new java.awt.Dimension(655, 506));
        setPreferredSize(new java.awt.Dimension(655, 506));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(655, 506));
        jPanel1.setMinimumSize(new java.awt.Dimension(655, 506));
        jPanel1.setPreferredSize(new java.awt.Dimension(655, 506));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("Return");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Please select a book to return.");

        tblReturn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Title", "Borrow Date", "Due Date"
            }
        ));
        tblReturn.setGridColor(new java.awt.Color(255, 255, 204));
        tblReturn.setMinimumSize(new java.awt.Dimension(60, 40));
        tblReturn.setRowHeight(20);
        jScrollPane1.setViewportView(tblReturn);

        btnReturn.setBackground(new java.awt.Color(102, 102, 255));
        btnReturn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("Return");
        btnReturn.setFocusPainted(false);
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(153, 137, 247));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.setFocusPainted(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnReturn))
                .addGap(191, 191, 191))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
        
        if (isAdmin == 0){
            Homepage homepage = new Homepage(UserID);
            homepage.setVisible(true);
            } else {
                AdminPage ap = new AdminPage();
                ap.setVisible(true);
            }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
            DefaultTableModel model = (DefaultTableModel)tblReturn.getModel();
            
            // https://stackoverflow.com/questions/38336113/jtable-if-any-row-is-selected
            // if no row is selected
            if (tblReturn.getSelectionModel().isSelectionEmpty()){
                JOptionPane.showMessageDialog(null, "Please select a row!", "Missing Input", JOptionPane.ERROR_MESSAGE);
            } else {
            int selectedRow = tblReturn.getSelectedRow();
            
            long BookID = Long.parseLong((String)model.getValueAt(selectedRow, 0));
            String title = (String)model.getValueAt(selectedRow, 1);
            String borrowDate = (String)model.getValueAt(selectedRow, 2);
            
            //save borrow book details 
            BookBorrow book = new BookBorrow(BookID, title, borrowDate, (String)model.getValueAt(selectedRow, 3), UserID, Integer.parseInt(renewTimes[selectedRow]));
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            Date currentDate = new Date();
            
            //save return book details
            BookReturn returnbook = new BookReturn(BookID, sdf.format(currentDate), UserID);
            
            //save transaction record
            Transaction trans = new Transaction(BookID, title, borrowDate, UserID, "Returned");
            
        try {
            // if the book is overdue
            if (sdf.parse(book.getDueDate()).before(sdf.parse(sdf.format((currentDate))))){
                //calculate fine
                double fine = book.calculateFine(currentDate);
                
                //if isAdmin, then display fine amount; else, pay fine at counter
                if (isAdmin == 0){
                    JOptionPane.showMessageDialog(null, "Return Unsuccessful! \n\n The book is OVERDUE! \n\n Please pay FINE at the COUNTER!! ", "Book Overdue", JOptionPane.WARNING_MESSAGE);
                } else {
                    //update fine record in textfile
                    Fine fineFile = new Fine(BookID, UserID, sdf.format(currentDate) ,fine);
                    String textline = fineFile.toString();
                    fineFile.updateFine(textline);
                    JOptionPane.showMessageDialog(null, "The book is OVERDUE! \n\n Please pay FINE with \n AMOUNT: RM" + String.format("%.2f", fine) + "\n\n", "Book Overdue", JOptionPane.WARNING_MESSAGE);
                    
                    //update return status as overdue
                    returnbook.setStatus("Overdue");
                    
                    //delete row from borrow & insert new return record & update transaction record
                    returnBook(book.toString(), returnbook.toString(), trans.UpdateRow());
                }
            } else {              
                // delete row from borrow & insert new return record
                returnBook(book.toString(), returnbook.toString(), trans.UpdateRow());
                }
        } catch (IOException ex){
            JOptionPane.showMessageDialog(null, "ERROR! Record is not written to file.", "Record Not Written", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Return.class.getName()).log(Level.SEVERE, null, ex);
        } }
    }//GEN-LAST:event_btnReturnActionPerformed
    
    private void returnBook(String book, String returnbook, String transaction){
        try {
            //delete row from BookBorrow
            WriteFile wf = new WriteFile(file);
            wf.deleteRow(book);
            
            // insert new row into BookReturn
            WriteFile write = new WriteFile("BookReturn.txt", true);
            write.writeToFile(returnbook);
            
            //update transaction record
            WriteFile writefile = new WriteFile("Transaction.txt");
            writefile.updateFile(transaction);
            
            JOptionPane.showMessageDialog(null, "Return successful!", "Return Success", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            Return frmReturn = new Return(UserID, isAdmin);
            frmReturn.setVisible(true);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "ERROR! Record is not written to file.", "Record Not Written", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Return.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Return().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReturn;
    // End of variables declaration//GEN-END:variables
}
